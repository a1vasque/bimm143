---
title: "Class10: Structural Bioinformatics"
author: "Andres Vasquez (PID: 16278181)"
format: pdf
---

## What is in the PDB database

The repository of biomolecular structure info is the PDB < www.rscb.org >.

Let's see what this database contains:

```{r}
stats <- read.csv("pdb_stats.csv", row.names = 1)
```

>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
#sum(stats$X.ray)
```

```{r}
as.numeric(stats$X.ray)
```
The commas are affecting the result. 

We got to get rid of the commas. Can you find a function to get rid of the commas?

```{r}
x <- stats$X.ray
sum(as.numeric(gsub(",","",x)))
```

I am going to turn this into a function and then use `apply()` to work on the entire table of data

```{r}
sumcomma <- function(x) {
  sum(as.numeric(gsub(",","",x)))}

sumcomma(stats$X.ray)
```

```{r}
n.total <- sumcomma(stats$Total)
n.total
```

```{r}
apply(stats, 2, sumcomma)
```

```{r}
apply(stats, 2, sumcomma)/n.total
```

```{r}
sumcomma(stats$EM)
```

>Q2: What proportion of structures in the PDB are protein?

```{r}
head(stats)
```
```{r}
as.numeric(gsub(",","", stats[1, "Total"]))
```

>Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

There are 248,805,733 entries which compared to PDB protein entries (189,750) means there are only ~7% of known sequences with a known structure.

248,805,733 - 189,750

```{r}
189750/248805733 *100
```

## Visualizing the HIV-1 protease structure

Mol* ("mol-star") viewer is now everywhere. The homepage is here:
https://molstar.org/viewer/

I want to insert my image from Mol* here.

![My first molecular image](1HSG.png)
> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

We only see one atom per water molecule because Hydrogen cannot be detected

> Q5 There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

The critical "conserved" water molecule is identified as "HOH 308"

> Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.
![](1HSG_2.png)

## Introduction to Bio3D in R

```{r}
library(bio3d)
```

```{r}
pdb <- read.pdb("1hsg")
pdb
```
> Q7: How many amino acid residues are there in this pdb object?

There are 198 amino acid residues

> Q8: Name one of the two non-protein residues?

HOH (127) and MK1 (1)

> Q9: How many protein chains are in this structure? 

There are 2 protein chains

Note that the attributes `(+ attr:)` of this object are listed on the last couple of lines. To find the attributes of any such object you can use:

```{r}
attributes(pdb)
```

To access these individual attributes we use the `dollar-attribute` name convention that is common with R list objects. For example, to access the `atom` attribute or component use `pdb$atom`:

```{r}
head(pdb$atom)
```

# Predicting functional motions of a single structure


```{r}
adk <- read.pdb("6s36")
adk
```

Normal mode analysis (NMA) is a structural bioinformatics method to predict protein flexibility and potential functional motions (a.k.a. conformational changes).

```{r}
# Perform flexiblity prediction
m <- nma(adk)
```

```{r}
plot(m)
```

To view a “movie” of these predicted motions we can generate a molecular “trajectory” with the mktrj() function.

```{r}
mktrj(m, file="adk_m7.pdb")
```

## Comparative Analysis of Protein Structures

Here we will work through a complete pipeline of analysis for a given protein family starting from one single databaase ID for a member of this family all the way to a deeper understanding of structure, dynamics, and function.

```{r}
library(bio3d)
```

```{r}
id <- "1ake_A"

aa <- get.seq(id)
aa
```

```{r}
b <- blast.pdb(aa)
b
```

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
```

```{r}
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

```{r}
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
pdbs
```

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)
```

```{r}
pc1 <- mktrj(pc.xray, pc=1, file = "pc_1.pdb")
pc1
```

